//Movie.cs

using System;

namespace MovieAppArray
{
    public class Movie
    {
        public int id { get; set; }
        public string name { get; set; }
        public string genre { get; set; }
        public int year { get; set; }

        public Movie(int id, string name, string genre, int year)
        {
            this.id = id;
            this.name = name;
            this.genre = genre;
            this.year = year;
        }

        public override string ToString()
        {
            return $"The id is {id}, movie name is {name}, genre is {genre} and year is {year}";
        }
    }
}

//Program.cs
using System;

namespace MovieAppArray
{
    internal class Program
    {
        public static Movie[] movies = MovieSerializer.Load();

        public static void Add()
        {
            for (int i = 0; i < movies.Length; i++)
            {
                if (movies[i] == null)
                {
                    Console.WriteLine("Enter id:");
                    int id = Convert.ToInt32(Console.ReadLine());

                    Console.WriteLine("Enter movie name:");
                    string name = Console.ReadLine();

                    Console.WriteLine("Enter genre:");
                    string genre = Console.ReadLine();

                    Console.WriteLine("Enter year:");
                    int year = Convert.ToInt32(Console.ReadLine());

                    movies[i] = new Movie(id, name, genre, year);
                    Console.WriteLine("Movie added successfully.");
                    MovieSerializer.Save(movies);
                    return;
                }
            }

            Console.WriteLine("Movie limit reached. Cannot add more than 5 movies.");
        }

        public static void Display()
        {
            bool found = false;
            Console.WriteLine("Displaying all the movies");
            for (int i = 0; i < movies.Length; i++)
            {
                if (movies[i] != null)
                {
                    Console.WriteLine(movies[i]);
                    found = true;
                }
            }

            if (!found)
            {
                Console.WriteLine("No movies to display");
            }
        }

        public static void ClearAll()
        {
            bool isEmpty = true;
            for (int i = 0; i < movies.Length; i++)
            {
                if (movies[i] != null)
                {
                    isEmpty = false;
                    break;
                }
            }

            if (isEmpty)
            {
                Console.WriteLine("No movies to clear");
                return;
            }

            for (int i = 0; i < movies.Length; i++)
            {
                movies[i] = null;
            }

            Console.WriteLine("All movies cleared.");
            MovieSerializer.Save(movies);
        }

        static void Main(string[] args)
        {
            int choice;
            do
            {
                Console.WriteLine("--------Movie Menu--------");
                Console.WriteLine("1. Add movies");
                Console.WriteLine("2. Display movies");
                Console.WriteLine("3. Clear all");
                Console.WriteLine("4. Exit");

                Console.WriteLine("Enter your choice");
                choice = Convert.ToInt32(Console.ReadLine());

                switch (choice)
                {
                    case 1:
                        Add();
                        break;
                    case 2:
                        Display();
                        break;
                    case 3:
                        ClearAll();
                        break;
                    case 4:
                        Console.WriteLine("Exiting....");
                        break;
                    default:
                        Console.WriteLine("Enter a valid choice");
                        break;
                }

            } while (choice != 4);
        }
    }
}
//MovieSerializer.cs
using System.IO;
using System.Xml;
using Newtonsoft.Json;

namespace MovieAppArray
{
    internal class MovieSerializer
    {
        // You can adjust the path to your own system
        private static string filePath = "C:\\Users\\shreya.rao\\Documents\\Practice\\MovieappArray.cs\\MovieappArray.cs\\obj\\Debug\\net8.0\\movie.json";

        public static void Save(Movie[] movies)
        {
            string json = JsonConvert.SerializeObject(movies,Newtonsoft.Json.Formatting.Indented);
            File.WriteAllText(filePath, json);
            Console.WriteLine("Movie data serialized successfully.");
        }

        public static Movie[] Load()
        {
            Movie[] result = new Movie[5]; 
            if (File.Exists(filePath))
            {
                string json = File.ReadAllText(filePath);
                Movie[] data = JsonConvert.DeserializeObject<Movie[]>(json);
                Console.WriteLine("Movie data deserialized successfully.");

                for (int i = 0; i < data.Length && i < 5; i++)
                {
                    result[i] = data[i];
                }

                return result;
            }
            else
            {
                Console.WriteLine("movies.json file not found.");
                return result;
            }
        }
    }
}
